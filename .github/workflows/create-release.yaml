name: Create Release
run-name: Create Release ${{ github.ref_name }}

env:
  IMAGE_REPO: europe-docker.pkg.dev/kyma-project/prod/eventing-publisher-proxy

on: workflow_dispatch

jobs:
  verify-release:
    name: Verify image version
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release-version.outputs.release_version }}
    steps:
      - name: Checkout EPP repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify that the current branch has a name that starts with 'release-'
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [[ "$CURRENT_BRANCH" == release-* ]]; then
            echo "current_branch=$CURRENT_BRANCH" >> $GITHUB_ENV
            echo "Branch name starts with 'release-'."
          else
            echo "Branch name does not start with 'release-'."
            exit 1
          fi

      - name: Get the next release version
        id: release-version
        run: |
          RELEASE_VERSION=$(./scripts/get_next_release_version.sh "$current_branch")
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Check if tags in sec_scanners_config.yaml match the release version
        env:
          RELEASE_VERSION: ${{ steps.release-version.outputs.release_version }}
        run: ./scripts/check_tags_in_sec_scanners_config.sh $RELEASE_VERSION

  create-draft:
    name: Create the draft release
    needs: verify-release
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ needs.verify-release.outputs.release_version }}
    outputs:
      release_id: ${{ steps.create-draft.outputs.release_id }}
    steps:
      - name: Checkout EPP repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_BOT_TOKEN }} # creating git tag using bot token because GITHUB_TOKEN would not trigger build workflow (https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow).

      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/create_changelog.sh $RELEASE_VERSION

      - name: Add lightweight tag to trigger release EPP build job
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }} # creating git tag using bot token because GITHUB_TOKEN would not trigger build workflow (https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow).
        run: |
          git tag $RELEASE_VERSION
          git push origin $RELEASE_VERSION

      - name: Create the draft release
        id: create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./scripts/create_draft_release.sh $RELEASE_VERSION)
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

  wait-for-build-job:
    name: Wait for prow jobs
    needs: [ verify-release, create-draft ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout eventing-tools
        uses: actions/checkout@v4
        with:
          repository: 'kyma-project/eventing-tools'
          path: 'kyma-project/eventing-tools'
          ref: main
          sparse-checkout: 'scripts/wait-for-commit-check'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install requirements
        run: |
          pip install -r $GITHUB_WORKSPACE/kyma-project/eventing-tools/scripts/wait-for-commit-check/requirements.txt

      - name: wait for build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_FULL_NAME: ${{ github.repository_owner }}/eventing-publisher-proxy
          GIT_REF: ${{ needs.verify-release.outputs.release_version }}
          # The re-usable image-builder workflow from neighbors appends the "Build image" suffix to the check run name.
          GIT_CHECK_RUN_NAME: "build-${{ needs.verify-release.outputs.release_version }} / Build image"
          INTERVAL: 60
          TIMEOUT: 900
        run: |
          python $GITHUB_WORKSPACE/kyma-project/eventing-tools/scripts/wait-for-commit-check/run.py

  publish-release:
    name: Publish release
    needs: [verify-release, create-draft, wait-for-build-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_release.sh ${{ needs.create-draft.outputs.release_id }}
